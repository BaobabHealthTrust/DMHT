<script language="javascript" type="text/javascript" src="/javascripts/jquery.js"></script>
<script language="javascript" type="text/javascript" src="/javascripts/jquery.flot.js"></script>

<div id="title" style="position: relative; right: -331px; bottom: 520px;  height: 30px;" label="Weight">
  <center><h3> Graphical Visualization</h3> </center>
  <div id="choices" style="height: 10px; position: relative; bottom: 16px; right: -27px;"> <b>Show:</b>
    <input type="radio" name="vitals" value="0"/>
    Weight
    <input type="radio" checked="checked" name="vitals" value="1"/>
    Blood Sugar
  </div>
</div>
>
<div id="simplegraphholder"
style="width: 380px; position: relative; right: -331px; height: 200px; bottom: 525px;">
   
</div>
<script id="source" language="javascript" type="text/javascript">
  jQuery.noConflict();
<% @graph_data =[[153.0, 53.2], [153.0, 54.5]].to_json%>

function setData() {
    var graphData;
        var patient_weight = [
      <% @min = Time.now
         @max = Time.now
         @obs = @patient.person.observations.find_by_concept_name("WEIGHT (KG)")
         @obs.sort_by{|obs| obs.obs_datetime}.each do |obs|
           @min = obs.obs_datetime if obs.obs_datetime < @min %>
        [<%= (obs.obs_datetime.to_i * 1000) -%>, /* multiply 1000 to convert time stamp to javascript mode*/
         <%= obs.value_numeric -%>],<% end %>
    ];

            var patient_blood_sugar = [[1256909708000, 150.0],[1257153256000, 255.0],[1257153256000, 353.0]];

    
    graphData = [{color: "green", data: patient_weight,  label: "Weight"},
                 {color: "red", data: patient_blood_sugar ,  label: "Blood Sugar"}];


    return graphData;
  }
function setPlotOptions()  {
    var options = {
                    grid: { clickable: true },
                    lines: { show: true },
                    points: { show: true },
                    xaxis: {mode: "time",timeformat: "%y %b"/*,
                            monthNames: ["jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"]*/
                          }
                  };
                  
     return options;
    }

      // hard-code color indices to prevent them from shifting as
    // countries are turned on/off
    var datasets =[];
    datasets = setData();
    var i = 0;
    jQuery.each(datasets, function(key, val) {
        val.color = i;
        ++i;
    });

    // insert checkboxes
    var choiceContainer = jQuery("#choices");
    choiceContainer.find("input").click(plotAccordingToChoices);

    function plotAccordingToChoices() {
        var data = [];
        

        choiceContainer.find("input:checked").each(function () {
            var key = jQuery(this).attr("value");
            if (key && datasets[key])
                data.push(datasets[key]);
        });

        if (data.length > 0)
            jQuery.plot(jQuery("#simplegraphholder"),data, setPlotOptions());
    }

    plotAccordingToChoices();
  
</script>