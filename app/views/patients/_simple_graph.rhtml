<style type="text/css">
  .graph-button {
    display: inline;
    background: #fff;
    font-size: 20px;
    color: #008;
    text-decoration: underline;
  }

  .active{
    background: #eee;
  }
</style>

<script language="javascript" type="text/javascript" src="/javascripts/jquery.js"></script>
<script language="javascript" type="text/javascript" src="/javascripts/jquery.flot.js"></script>

<div id="title" style="position: relative; right: -331px; bottom: 510px;">
  <center><h3></h3> </center>
  <div id="choices" style="height: 10px; position: relative;  right: 12px;"> <b>Show:</b>
    <div id="graph0" onmousedown="plotAccordingToChoices(0);">Blood Sugar</div>
    <div id="graph1" onmousedown="plotAccordingToChoices(1);">Blood Pressure</div>
    <div id="graph2" onmousedown="plotAccordingToChoices(2);">Weight</div>
  </div>
</div>
<br/>
<div id="simplegraphholder"style="width: 380px; position: relative; right: -331px; height: 190px; bottom: 510px;">
   
</div>
<script type="text/javascript">
  jQuery.noConflict();

  function setData() {

    var patient_weight = [
        <% @min = Time.now
        @max = Time.now
        @obs = @patient.person.observations.find_by_concept_name("WEIGHT (KG)")
        @obs.sort_by{|obs| obs.obs_datetime}.each do |obs|
        @min = obs.obs_datetime if obs.obs_datetime < @min %>
        [<%= (obs.obs_datetime.to_i * 1000) -%>, /* multiply 1000 to convert time stamp to javascript mode*/
        <%= obs.value_numeric -%>],<% end %>
        ];

    var systolic = [
        <% @min = Time.now
        @max = Time.now
        @obs = @patient.person.observations.find_by_concept_name("SYSTOLIC BLOOD PRESSURE")
        @obs.sort_by{|obs| obs.obs_datetime}.each do |obs|
        @min = obs.obs_datetime if obs.obs_datetime < @min %>
        [<%= (obs.obs_datetime.to_i * 1000) -%>, /* multiply 1000 to convert time stamp to javascript mode*/
        <%= obs.value_numeric -%>],<% end %>
        ];

    var diastolic = [
        <% @min = Time.now
        @max = Time.now
        @obs = @patient.person.observations.find_by_concept_name("DIASTOLIC BLOOD PRESSURE")
        @obs.sort_by{|obs| obs.obs_datetime}.each do |obs|
        @min = obs.obs_datetime if obs.obs_datetime < @min %>
        [<%= (obs.obs_datetime.to_i * 1000) -%>, /* multiply 1000 to convert time stamp to javascript mode*/
        <%= obs.value_numeric -%>],<% end %>
        ];

    var fasting = [
        <% @min = Time.now
        @max = Time.now
        @obs = @patient.person.observations.find_by_concept_name("FASTING")
        @obs.sort_by{|obs| obs.obs_datetime}.each do |obs|
        @min = obs.obs_datetime if obs.obs_datetime < @min %>
        [<%= (obs.obs_datetime.to_i * 1000) -%>, /* multiply 1000 to convert time stamp to javascript mode*/
        <%= obs.value_numeric -%>],<% end %>
        ];

    var random = [
        <% @min = Time.now
        @max = Time.now
        @obs = @patient.person.observations.find_by_concept_name("RANDOM")
        @obs.sort_by{|obs| obs.obs_datetime}.each do |obs|
        @min = obs.obs_datetime if obs.obs_datetime < @min %>
        [<%= (obs.obs_datetime.to_i * 1000) -%>, /* multiply 1000 to convert time stamp to javascript mode*/
        <%= obs.value_numeric -%>],<% end %>
        ];

    var glycated = [
        <% @min = Time.now
        @max = Time.now
        @obs = @patient.person.observations.find_by_concept_name("HbA1c")
        @obs.sort_by{|obs| obs.obs_datetime}.each do |obs|
        @min = obs.obs_datetime if obs.obs_datetime < @min %>
        [<%= (obs.obs_datetime.to_i * 1000) -%>, /* multiply 1000 to convert time stamp to javascript mode*/
        <%= obs.value_numeric -%>],<% end %>
        ];

    var bpGraphData = [{color: "green", points: { show: true }, lines: {show: true}, data: systolic,  label: "Systolic"},
                   {color: "red", points: { show: true }, lines: {show: true}, data: diastolic ,  label: "Diastolic"}];

    var bsGraphData = [ {color: "blue", bars: {show: true, fill:true, lineWidth: 10}, data: fasting ,  label: "Fasting"},
                    {color: "red", bars: {show: true, fill:true, lineWidth: 10}, data: glycated,  label: "HbA1c"},
                    {color: "green", bars: {show: true, fill:true, lineWidth: 10}, data: random,  label: "Random"},];

    var weightGraphData = [{data: patient_weight, points: { show: true },lines: {show: true},  label: "Weight"}];

    return [bsGraphData, bpGraphData, weightGraphData];
  }

  function setPlotOptions() {  
    var options;
    options = {
      grid: { clickable: true },
      legend: {position:"nw"},
      xaxis: {mode: "time",timeformat: "%y %b"}
    };
    return options;
  }

  /* hard-code color indices to prevent them from shifting as
   the user switches among the graphs */

  var i = 0;
  var datasets = setData();

  jQuery.each(datasets, function(key, val) {
    val.color = i;
    ++i;
  });

  function plotAccordingToChoices(key) {
    if (typeof(key) == 'undefined') key = 0;
    jQuery('#choices div').attr('class', 'graph-button');
    jQuery('#graph'+key).attr('class', 'graph-button active');
    jQuery.plot(jQuery("#simplegraphholder"), datasets[key], setPlotOptions());
  }

  plotAccordingToChoices(0);

</script>